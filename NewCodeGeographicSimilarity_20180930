


#calculate the airport list
airport<-readLines("C:\\Users\\Jue Wang\\Downloads\\AplicationDistance\\airports.txt")

library(stringi)
airport<-stri_enc_toutf8(airport)
mm<-matrix("",nrow=length(airport),ncol=20)

for(i in 1:length(airport)){
address<-unlist(strsplit(as.matrix(airport[i]),","))
mm[i,1:length(address)]<-address
}
write.table(mm,file="Airportlocation.csv",sep=",",row.names=FALSE)

#militarylocation
militarybase<-read.table("Militarybase.csv",sep=",",header=TRUE)
mm<-matrix("",nrow=nrow(militarybase),ncol=10)
for(i in 1:100){
address<-unlist(strsplit(as.matrix(militarybase[i,]),","))
mm[i,1:length(address)]<-address
}
write.table(mm,file="Militarybaselocationpoint.csv",sep=",",row.names=FALSE)

#Forprofit
firmID<-read.table("ForprofitID.csv",sep=",",header=TRUE)
firmID<-data.frame(as.matrix(firmID))
Matchfirm<-read.table("MatchFirm.csv",sep=",",header=TRUE)
location<-read.table("zip_codes_states.csv",sep=",",header=TRUE)
location<-location[which(!is.na(location$latitude)),]

firmID<-merge(firmID,Matchfirm,by.x="docID",by.y="docID",all.x=TRUE)
firmID$latitude<-""
firmID$longitude<-""
firmID$zip<-as.numeric(as.matrix(firmID$zip))
firmID<-firmID[which(!is.na(firmID$zip)),]


for(i in 1:nrow(firmID)){
findadd<-which(as.numeric(as.matrix(location[,1]))==as.numeric(as.matrix(firmID[i,4])))
if(length(findadd)==0){
findadd<- which.min(abs( as.numeric(as.matrix(location[,1]))- as.numeric(as.matrix(firmID[i,4])))) 
}
firmID[i,]$latitude<-location[findadd,2]
firmID[i,]$longitude<-location[findadd,3]
}

write.table(firmID,file="forprofitlocation.csv",sep=",",row.names=FALSE)



#AUVSI
library(readstata13)
data<-read.dta13("Firmactivity_20180914.dta")
AUVSI<-read.table("AUVSImember.csv",sep=",",header=TRUE)
Matchfirm<-read.table("MatchFirm.csv",sep=",",header=TRUE)
location<-read.table("zip_codes_states.csv",sep=",",header=TRUE)
location<-location[which(!is.na(location$latitude)),]

firmID<-merge(AUVSI,Matchfirm,by.x="docID",by.y="docID",all.x=TRUE)
firmID$AUVSI<-NULL
firmID$latitude<-""
firmID$longitude<-""
firmID$zip<-as.numeric(as.matrix(firmID$zip))
firmID<-firmID[which(!is.na(firmID$zip)),]

for(i in 1:nrow(firmID)){

findadd<-which(as.numeric(as.matrix(location[,1]))==as.numeric(as.matrix(firmID[i,4])))
if(length(findadd)==0){
findadd<- which.min(abs( as.numeric(as.matrix(location[,1]))- as.numeric(as.matrix(firmID[i,4])))) 
}
firmID[i,]$latitude<-location[findadd,2]
firmID[i,]$longitude<-location[findadd,3]
}

write.table(firmID,file="AUVSIlocation.csv",sep=",",row.names=FALSE)


library(readstata13)

statedata<-read.dta13("NewDistance_20180929.dta")
stateadd<-statedata[,1:3]
stateadd$date<-as.Date(paste(stateadd$currentyear,stateadd$month,"01",sep="-"))


forprofit<-read.table("forprofitlocation.csv",sep=",",header=TRUE)
forprofit$date<- as.Date(paste(forprofit$exemptionyear,forprofit$exemptionmonth,"01",sep="-"))
Matchfirm<-read.table("MatchFirm.csv",sep=",",header=TRUE)
Matchfirm$exemptionyear<-NULL
Matchfirm$exemptionmonth<-NULL
Matchfirm$zip<-NULL
forprofit<-merge(forprofit,Matchfirm,by.x="docID", by.y="docID", all.x=TRUE)



install.packages("geosphere")
library(geosphere)
military<-read.table("Militarybaselocationpoint.csv",sep=",",header=TRUE)
military<-military[which(!is.na(military$V1)),]
airport<-read.table("Airportloc.csv",sep=",",header=TRUE)

library(rgeos)

calmeandistance<-function(set1, set2){

distance<-matrix("",nrow=nrow(set2),ncol=1)
for(i in 1:nrow(set2)){
distance[i]<-distm(cbind(set1[2],set1[1]), cbind(set2[i,2],set2[i,1]), fun = distHaversine)
}

return(min(distance))
}

differencemilitary<-apply(forprofit[,5:6],1,calmeandistance,military)
forprofit$dismilitary<-differencemilitary
differenceairport<-apply(forprofit[,5:6],1,calmeandistance,airport)
forprofit$disairport<-differenceairport
write.table(forprofit, file="firmdistances.csv",sep=",",row.names=FALSE)

#find individual and coalition distance
allfirm<-read.table("firmdistances.csv",sep=",",header=TRUE)
individual<-read.table("IndividualAdoption.csv",sep=",",header=TRUE)
individual<-allfirm[which(!allfirm$docID%in%as.matrix(individual)),]

AUVSI<-read.table("AUVSIlocation.csv",sep=",",header=TRUE)
AUVSI<-allfirm[which(!allfirm$docID%in%AUVSI$docID),]


caldistance<-function(input, orgs){
address<-which(as.Date(as.matrix(orgs$date))<as.Date(as.matrix(input[4]))& as.numeric(as.matrix(orgs$statef)) ==as.numeric(as.matrix(input[3])))
if(length(address)!=0){
meanmilitary<-mean(as.numeric(as.matrix(orgs[address,9 ])),na.rm=TRUE)
meanairport<-mean(as.numeric(as.matrix(orgs[address, 10])),na.rm=TRUE)
}else{
meanmilitary<-NA
meanairport<-NA
}
output<-data.frame(meanmilitary)
output<-cbind(output, meanairport)
return(output)
}

results<-apply(stateadd,1,caldistance, forprofit)
results<-do.call(rbind,results)
stateadd$meanmilitary<-results$meanmilitary
stateadd$meanairport<-results$meanairport
write.table(stateadd,file="statesimilar.csv",sep=",",row.names=FALSE)



results<-apply(stateadd,1,caldistance, individual)
results<-do.call(rbind,results)
stateadd$individualmilitary<-results$meanmilitary
stateadd$individualairport<-results$meanairport


write.table(stateadd,file="individualsimilar.csv",sep=",",row.names=FALSE)


results<-apply(stateadd,1,caldistance, AUVSI)
results<-do.call(rbind,results)
stateadd$AUVSImilitary<-results$meanmilitary
stateadd$AUVSIairport<-results$meanairport

write.table(stateadd,file="AUVSIsimilarity.csv",sep=",",row.names=FALSE)



******************************************
#add regulation
******************************************

stateregulation<-read.table("StateRegulationLimitation.csv",sep=",",header=TRUE)
stateregulation$date<- as.Date(paste(stateregulation$Passyear,stateregulation$Passmonth,"01",sep="-"))


statedata<-read.dta13("NewDistance_20180929.dta")
stateadd<-statedata[,1:3]
stateadd$date<-as.Date(paste(stateadd$currentyear,stateadd$month,"01",sep="-"))


calstate<-function(input, orgs){
address<-which(orgs$date<as.Date(as.matrix(input[4]))& orgs$FIPS.Code ==as.numeric(as.matrix(input[3])))
if(length(address)!=0){
simimilitary<-sum(orgs[address, 4],na.rm=TRUE)
simiairport<-sum(orgs[address,5],na.rm=TRUE)
}else{
simimilitary<-NA
simiairport<-NA
}
output<-data.frame(simimilitary)
output<-cbind(output, simiairport)
return(output)
}

results<-apply(stateadd,1,calstate, stateregulation)
results<-do.call(rbind,results)
stateadd$regulationmilitary<-results$simimilitary
stateadd$regulationairport<-results$simiairport
stateadd[which(is.na(stateadd$regulationmilitary)),]$regulationmilitary<-0
stateadd[which(is.na(stateadd$regulationairport)),]$regulationairport<-0

write.table(stateadd,file="statesimiregulation.csv",sep=",",row.names=FALSE)




#merge data set
statedata<-read.dta13("NewDistance_20180929.dta")
addregulation<-read.table("statesimiregulation.csv",sep=",",header=TRUE)
addsimilarity<-read.table("statesimilar.csv",sep=",",header=TRUE)

statedata<-merge(statedata,addregulation, by.x=c("currentyear", "month", "statefipx"),
by.y=c("currentyear", "month", "statefipx"),all.x=TRUE
)


statedata<-merge(statedata,addsimilarity, by.x=c("currentyear", "month", "statefipx"),
by.y=c("currentyear", "month", "statefipx"),all.x=TRUE
)

individual<-read.table("individualsimilar.csv",sep=",",header=TRUE)
AUVSI<-read.table("AUVSIsimilarity.csv",sep=",",header=TRUE)

statedata<-read.dta13("Regulationsimi.dta")
statedata<-merge(statedata,individual, by.x=c("currentyear", "month", "statefipx"),
by.y=c("currentyear", "month", "statefipx"),all.x=TRUE
)

statedata<-merge(statedata,AUVSI, by.x=c("currentyear", "month", "statefipx"),
by.y=c("currentyear", "month", "statefipx"),all.x=TRUE
)

library(foreign)
write.dta(statedata,file="Regulationsimi.dta")

#add the proposal and competition
proposedbills<-read.table("proposedbills.csv",sep=",",header=TRUE)
proposedbills$date<-as.Date(paste(proposedbills$ProposYear,proposedbills$ProposMonth,"01",sep="-"))

sumup<-function(input,orgs){
address<-which(orgs$date<as.Date(as.matrix(input[4]))& orgs$Statefips ==as.numeric(as.matrix(input[3])))
return(length(address))
}
library(plyr)
results<-apply(stateadd,1,sumup, proposedbills)
stateadd$proposedbill_p<-results
write.table(stateadd,file="proposedbills.csv",sep=",",row.names=FALSE)



statedata<-read.dta13("Regulationsimi.dta")
statedata<-merge(statedata,stateadd, by.x=c("currentyear","month", "statefipx"),
by.y=c("currentyear","month", "statefipx"),all.x=TRUE)

write.dta(statedata,file="Regulationsimi.dta")

politicalcompetition<-read.table("statepoliticacompetition.csv",sep=",",header=TRUE)
politicalcompetition<-politicalcompetition[,1:3]
statedata<-merge(statedata,politicalcompetition, by.x=c("currentyear", "statefipx"),
by.y=c("Year", "statefips"),all.x=TRUE
)

stateregulation<-read.dta13("testStateregulation.dta")
addup<-stateregulation[,1:3]
addup$pubprotest_6m<-stateregulation$pubprotest_6m
addup$pubprotest_12m<-stateregulation$pubprotest_12m

statedata<-merge(statedata, addup,
by.x=c("currentyear", "month", "statefipx"),
by.y=c("currentyear", "month", "statefipx"),all.x=TRUE)

replace test = log(airportmean*1000000+1)

replace airportAUVSI= log(airportAUVSI*1000000+1)

replace airportindividual = log(airportindividual*1000000+1)



xtreg logsimilar  alldrone_p  airportpercapita loggdp Totalpop , fe 

est sto model1

xtreg logsimilar  test alldrone_p  airportpercapita loggdp Totalpop , fe 

est sto model2

xtreg  logsimilar test airportindividual  alldrone_p  airportpercapita loggdp Totalpop ,fe 

est sto model3

xtreg logsimilar test allactivity_p  c.(test)#c.(allactivity_p ) alldrone_p  airportpercapita loggdp Totalpop,fe 

est sto model4

xtreg logsimilar test hvd2_winmargin_4yr  c.(test)#c.(hvd2_winmargin_4yr ) alldrone_p  airportpercapita loggdp Totalpop ,fe 

est sto model5

Robust Check

xtreg logsimilar test Idcompetition c.(test)#c.(Idcompetition)  alldrone_p  airportpercapita loggdp Totalpop ,fe 


sum logsimilar test airportindividual  allactivity_p hvd2_winmargin_4yr alldrone_p airportpercapita loggdp Totalpop 


